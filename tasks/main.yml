---
# Resist the temptation to update package lists.  This role must run before
# platform_roles are applied, so package source lists might not yet be valid.
- name:                 'install python'
  raw:                  if ! dpkg-query --list | awk '{print $2}' | grep -q '^python3$'; then apt-get -y install python3 > /var/log/install_python.log 2>&1 && echo 'installed python' || echo 'failed to install python; see /var/log/install_python.log' >&2; fi
  args:
    executable:         '/bin/bash'
  register:             install_python_result
  changed_when:         install_python_result.stdout.find('installed python') != -1
- include:              '../tasks/install_packages.yml'
- include:              '../tasks/install_files.yml'
- include:              '../tasks/remove_files.yml'
- include:              '../tasks/system_groups.yml'
- include:              '../tasks/system_users_unlocked.yml'
- include:              '../tasks/lines_in_files.yml'
- include:              '../tasks/authorized_keys.yml'
  vars:
    authorized_keys:
      - user:           'ansible'
        keyfile:        "{{ role_path }}/../../inventory/hosts/{{ ansible_master_host }}/users/{{ hostvars[ansible_master_host]['ansible_master_user']  | default('ansible') }}/files/ssh_keys/id_rsa.pub"
  with_items:           "{{ groups['ansible_master_extended'] }}"
  loop_control:
    loop_var:           'ansible_master_host'
- include:              '../tasks/allow_users.yml'
# Check whether an ssh service exists.  This facilitates deployment to
# localhost.
- command:              service ssh status
  register:             service_ssh_status_result
  failed_when:          False
  changed_when:         False
- include:              '../tasks/restart_services.yml'
  when:                 service_ssh_status_result.rc == 0
                        and ( 
                          allow_users_result.changed
                          or authorized_keys_result.changed
                        )
